package com.coderslab.entity;
// Generated Oct 28, 2017 11:34:24 AM by Hibernate Tools 4.3.1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import org.hibernate.annotations.NamedQueries;
import org.hibernate.annotations.NamedQuery;

/**
 * Topics generated by hbm2java
 */
@Entity
@Table(name = "topics",
         catalog = "bes"
)
@NamedQueries({
    @NamedQuery(name = "Topics.getAllWithLessonByTpicsId", query = "select distinct t from Topics t left join fetch t.lesson l left join fetch l.course c where t.topicsId = :topicsId")
    ,
@NamedQuery(name = "Topics.getAllwithLesson", query = "select distinct t from Topics t left join fetch t.lesson l left join fetch l.course c")
})
public class Topics implements java.io.Serializable {

    private Integer topicsId;
    private Lesson lesson;
    private String description;
    private int duration;
    private Boolean status;
    private String topicsTitle;
    private String videoUrl;

    public Topics() {
    }

    public Topics(Lesson lesson, int duration, String topicsTitle) {
        this.lesson = lesson;
        this.duration = duration;
        this.topicsTitle = topicsTitle;
    }

    public Topics(Lesson lesson, String description, int duration, Boolean status, String topicsTitle, String videoUrl) {
        this.lesson = lesson;
        this.description = description;
        this.duration = duration;
        this.status = status;
        this.topicsTitle = topicsTitle;
        this.videoUrl = videoUrl;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "topicsId", unique = true, nullable = false)
    public Integer getTopicsId() {
        return this.topicsId;
    }

    public void setTopicsId(Integer topicsId) {
        this.topicsId = topicsId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "lessonId", nullable = false)
    public Lesson getLesson() {
        return this.lesson;
    }

    public void setLesson(Lesson lesson) {
        this.lesson = lesson;
    }

    @Column(name = "description")
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "duration", nullable = false)
    public int getDuration() {
        return this.duration;
    }

    public void setDuration(int duration) {
        this.duration = duration;
    }

    @Column(name = "status")
    public Boolean getStatus() {
        return this.status;
    }

    public void setStatus(Boolean status) {
        this.status = status;
    }

    @Column(name = "topicsTitle", nullable = false)
    public String getTopicsTitle() {
        return this.topicsTitle;
    }

    public void setTopicsTitle(String topicsTitle) {
        this.topicsTitle = topicsTitle;
    }

    @Column(name = "videoUrl")
    public String getVideoUrl() {
        return this.videoUrl;
    }

    public void setVideoUrl(String videoUrl) {
        this.videoUrl = videoUrl;
    }

    @Override
    public String toString() {
        return "Topics{" + "topicsId=" + topicsId + ", lesson=" + lesson + ", description=" + description + ", duration=" + duration + ", status=" + status + ", topicsTitle=" + topicsTitle + ", videoUrl=" + videoUrl + '}';
    }

}
