package com.coderslab.entity;
// Generated Oct 28, 2017 11:34:24 AM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.NamedQueries;
import org.hibernate.annotations.NamedQuery;

/**
 * Course generated by hbm2java
 */
@Entity
@Table(name = "course",
         catalog = "bes"
)
@NamedQueries({
    @NamedQuery(name = "Course.getAllWithLesson", query = "select distinct c from Course c left join fetch c.lessons l left join fetch l.topicses t")
})
public class Course implements java.io.Serializable {

    private Integer courseId;
    private String courseName;
    private String courseCode;
    private String description;
    private boolean status;
    private Integer courseDuration;
    private String courseBook;
    private String introVideo;
    private Set<Lesson> lessons = new HashSet<Lesson>(0);

    public Course() {
    }

    public Course(String courseName, String courseCode, boolean status) {
        this.courseName = courseName;
        this.courseCode = courseCode;
        this.status = status;
    }

    public Course(String courseName, String courseCode, String description, boolean status, Integer courseDuration, String courseBook, String introVideo, Set<Lesson> lessons) {
        this.courseName = courseName;
        this.courseCode = courseCode;
        this.description = description;
        this.status = status;
        this.courseDuration = courseDuration;
        this.courseBook = courseBook;
        this.introVideo = introVideo;
        this.lessons = lessons;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "courseId", unique = true, nullable = false)
    public Integer getCourseId() {
        return this.courseId;
    }

    public void setCourseId(Integer courseId) {
        this.courseId = courseId;
    }

    @Column(name = "courseName", nullable = false, length = 100)
    public String getCourseName() {
        return this.courseName;
    }

    public void setCourseName(String courseName) {
        this.courseName = courseName;
    }

    @Column(name = "courseCode", nullable = false, length = 45)
    public String getCourseCode() {
        return this.courseCode;
    }

    public void setCourseCode(String courseCode) {
        this.courseCode = courseCode;
    }

    @Column(name = "description", length = 65535)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "status", nullable = false)
    public boolean isStatus() {
        return this.status;
    }

    public void setStatus(boolean status) {
        this.status = status;
    }

    @Column(name = "courseDuration")
    public Integer getCourseDuration() {
        return this.courseDuration;
    }

    public void setCourseDuration(Integer courseDuration) {
        this.courseDuration = courseDuration;
    }

    @Column(name = "courseBook")
    public String getCourseBook() {
        return this.courseBook;
    }

    public void setCourseBook(String courseBook) {
        this.courseBook = courseBook;
    }

    @Column(name = "introVideo", length = 65535)
    public String getIntroVideo() {
        return this.introVideo;
    }

    public void setIntroVideo(String introVideo) {
        this.introVideo = introVideo;
    }

    
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "course")
    public Set<Lesson> getLessons() {
        return this.lessons;
    }

    public void setLessons(Set<Lesson> lessons) {
        this.lessons = lessons;
    }

    @Override
    public String toString() {
        return "Course{" + "courseId=" + courseId + ", courseName=" + courseName + ", courseCode=" + courseCode + ", description=" + description + ", status=" + status + ", courseDuration=" + courseDuration + ", courseBook=" + courseBook + ", introVideo=" + introVideo + ", lessons=" + lessons + '}';
    }

}
